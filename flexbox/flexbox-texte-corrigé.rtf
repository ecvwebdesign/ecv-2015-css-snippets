{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fnil\fcharset0 Calibri;\f1\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red37\green37\blue37;}
{\info
{\author Aur\'e9lien Grimaud}}\paperw11905\paperh16837\margl1417\margr1417\margb1417\margt1417\vieww22080\viewh15540\viewkind1\viewscale180
\deftab708
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\f0\fs24 \cf0 Syntaxe\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs22 \cf0 Avant toute chose, voici la syntaxe si particuli\'e8re de flexbox. Elle est dense, mais elle va changer la donne quant \'e0 la construction d\'92une mise en page.\uc0\u8232 On appellera 
\b flex container
\b0 , l\'92\'e9l\'e9ment du HTML renfermant les bo\'eetes.\uc0\u8232 On appellera 
\b flex items
\b0 , les \'e9l\'e9ments flexibles ou bo\'eetes flexibles.\
La propri\'e9t\'e9 
\b display 
\b0 prend ces valeurs\'a0:
\fs24 \uc0\u8232 
\fs22 - flex\uc0\u8232 - flex-inline
\fs24 \

\fs22 La propri\'e9t\'e9 
\b flex-direction
\b0  a pour valeurs\'a0:
\fs24 \uc0\u8232 - 
\fs22 column\'a0: permet d\'92aligner les bo\'eetes verticalement.\uc0\u8232 - column-reverse\'a0: permet d\'92aligner et inverser l\'92ordre (de mani\'e8re sym\'e9trique) les bo\'eetes verticalement.\u8232 - row\'a0: permet d\'92aligner les bo\'eetes horizontalement.\u8232 - row-reverse\'a0: permet d\'92aligner et inverser l\'92ordre (de mani\'e8re sym\'e9trique) les bo\'eetes horizontalement.\u8232 - inherit\'a0: prend la valeur du parent.\u8232 - initial\'a0: remet la valeur par d\'e9faut (row).
\fs24 \

\fs22 La propri\'e9t\'e9 
\b flex-wrap 
\b0 a 5 valeurs\'a0:\uc0\u8232 -  nowrap\'a0: les \'e9l\'e9ments ne retournent pas \'e0 la ligne.\u8232 -  wrap\'a0: les \'e9l\'e9ments retournent automatiquement \'e0 la ligne s\'92ils d\'e9bordent.\u8232 - wrap-reverse\'a0: comme wrap, mais le retour \'e0 la ligne se fait plus haut et non plus bas.\u8232 - inherit\'a0: prend la valeur du parent.\u8232 - initial\'a0: remet la valeur par d\'e9faut (nowrap).\
La propri\'e9t\'e9 
\b justify-content 
\b0 a 7 valeurs\'a0:\uc0\u8232 - flex-start\'a0: les bo\'eetes ont pour origine la gauche du conteneur.\u8232 - flex-end\'a0: les bo\'eetes ont pour origine la droite du conteneur.\u8232 - center\'a0: les bo\'eetes ont pour origine le centre du conteneur.\u8232 - space-between\'a0: les bo\'eetes se r\'e9partissent \'e9quitablement dans l\'92espace, dont les extr\'e9mit\'e9s se collent aux bords du conteneur.\u8232 - space-around\'a0: les bo\'eetes se r\'e9partissent \'e9quitablement dans l\'92espace, selon la largeur du conteneur.\u8232 - inherit\'a0: prend la valeur du parent.\u8232 - initial\'a0: remet la valeur par d\'e9faut (flex-start).\
La propri\'e9t\'e9 
\b align-items 
\b0 a 7 valeurs\'a0:\uc0\u8232 - flex-start\'a0: les bo\'eetes ont pour origine le haut du conteneur.\u8232 - flex-end\'a0: les bo\'eetes ont pour origine le bas du conteneur.\u8232 - center\'a0: les bo\'eetes ont pour origine le centre du conteneur.\u8232 - baseline\'a0: les bo\'eetes se r\'e9partissent selon la ligne de balise de leur contenu textu\'e9.\u8232 - stretch\'a0: La longueur des bo\'eetes s\'92allonge jusqu\'92\'e0 toucher le bas du conteneur.\u8232 - inherit\'a0: prend la valeur du parent.\u8232 - initial\'a0: remet la valeur par d\'e9faut (flex-start).\
La propri\'e9t\'e9 
\b order
\b0  s\'92applique aux bo\'eetes et prend comme valeurs des entiers relatifs (
\f1\fs21 \cf2 \'a0
\f0\fs22 \cf0 =\{\uc0\u8734 \'a0;..\'a0;-2\'a0;-1\'a0;0\'a0;1\'a0;2\'a0;..\'a0;\u8734 \}), comme 
\b z-index
\b0 . Une bo\'eete d\'92ordre -1 sera devant une bo\'eete d\'92ordre 0, et ainsi de suite. \'c0 notre code.\
Avant tout chose, il faut parler de la combinaison de ces propri\'e9t\'e9s avec 
\b flex
\b0  :\uc0\u8232 - flex\'a0: (flex-grow) (flex-shrink) (flex-basis).\
CSS\
/* l\'92affichage */\uc0\u8232 display: flex;				/*propri\'e9t\'e9 par d\'e9faut*/\u8232 display: -webkit-box;			/*compatibilit\'e9 Chrome, Safari, Opera*/\u8232 display: -moz-box;			/*compatibilit\'e9 Firefox*/\u8232 display: -ms-flexbox;			/*comptabilit\'e9 IE */\u8232 display: -webkit-flex;			/*compatibilit\'e9 Chrome, Safari, Opera*/\
/* la flexibilit\'e9 des flex items */\uc0\u8232 flex:  (valeur);				/*propri\'e9t\'e9 par d\'e9faut*/\u8232 -webkit-box-flex: (valeur);		/*compatibilit\'e9 Chrome, Safari, Opera*/\u8232 -moz-box-flex:  (valeur);		/*compatibilit\'e9 Firefox*/\u8232 -webkit-flex:  (valeur);			/*compatibilit\'e9 Chrome, Safari, Opera*/\u8232 -ms-flex:  (valeur);			/*comptabilit\'e9 IE */\
/* l\'92ordres des flex items */\uc0\u8232 order: (valeur);				/*propri\'e9t\'e9 par d\'e9faut*/\u8232 -webkit-box-ordinal-group: (valeur);	/*compatibilit\'e9 Chrome, Safari, Opera*/\u8232 -moz-box-ordinal-group: (valeur);	/*compatibilit\'e9 Firefox*/\u8232 -ms-flex-order: (valeur);		/*comptabilit\'e9 IE */\u8232 -webkit-order: (valeur);			/*compatibilit\'e9 Chrome, Safari, Opera*/\
\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs28 \cf0 Nouveau tuto, plus court, plus simple, plus fin\'a0: L'Atelier Flexbox\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs22 \cf0 Flexbox est un mod\'e8le de bo\'eete flexible qui s\'92affranchit totalement des valeurs fixes. Tr\'e8s utile dans un contexte de page Web adaptive (mobile & moniteur).\
Flexbox n'est pas nouveau, mais n'est pas encore un standard. Le fruit est meilleur quand il est cueilli \'e0 maturit\'e9, et pour les standards, c'est pareil. Je vous invite \'e0 suivre ces petits ateliers pour ceux qui veulent exp\'e9rimenter ou bien changer leur mani\'e8re de construire une page Web. Jur\'e9, c'est accessible aux newbies. Bon jeu.
\fs28 \

\fs22 \
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs24 \cf0 Flexbox construit des listes.\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs22 \cf0 Difficult\'e9 1/5\
Flexbox construit des syst\'e8mes de lignes et de colonnes. Prenons l'exemple de cette liste de courses tr\'e8s banale, g\'e9rable en quelques lignes de CSS. Dans un premier temps, il faut donner un comportement flexible au conteneur: le
\b  flex container
\b0  (cf syntaxe).\
Le conteneur est fix\'e9. Maintenant c'est au tour des bo\'eetes \'e0 l\'92int\'e9rieur de se comporter comme \'e9l\'e9ment flexible: les 
\b flex items
\b0 . On veut une liste sur une colonne, et pour cela, il faut que l'axe principal parte du haut vers le bas. Les flex items prendront automatiquement la largeur du flex container gr\'e2ce \'e0 la propri\'e9t\'e9 
\b flex-basis
\b0  et 
\b flex-shrink
\b0 .\
HTML\uc0\u8232 <\'85>\u8232 <ul class="flexContainer">\
\pard\pardeftab708\li708\ri-1\sl259\slmult1\sa160
\cf0 <li class="flexItem"><p>Patates</p></li>\uc0\u8232 <li class="flexItem "><p>Papier toilettes</p></li>\u8232 <li class="flexItem "><p>2 \'e9ponges</p></li>\u8232 <li class="flexItem "><p>Ravioli</p></li>\u8232 <li class="flexItem "><p>Canard WC</p></li>\u8232 <li class="flexItem "><p>Slip de bain</p></li>\u8232 <li class="flexItem "><p>Tartines</p></li>\u8232 <li class="flexItem "><p>Sopalin</p></li>\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160
\cf0 </ul>\uc0\u8232 <\'85>\
CSS\uc0\u8232 /* l\'92\'e9l\'e9ment parent */\u8232 . flexContainer \{\u8232 	/* d\'e9clarer le comportement au flex container */\u8232 	display: flex;\u8232 \u8232 	/* modifier la direction de l\'92axe en l\'92orientant de haut en bas */\u8232 	flex-direction: column;\u8232 \u8232 	/* les flex items reviendront \'e0 la ligne automatiquement si \'e7a d\'e9passe */\u8232 	flex-wrap: wrap;\u8232 \u8232 	/* reset de l\'92\'e9l\'e9ment <ul> */\u8232 	padding: 0;\u8232 	list-style: none;\u8232 	max-width: 960px;\u8232 	margin: 0 auto;\u8232 \}\
/* Les \'e9l\'e9ments \'e0 l\'92int\'e9rieur des flex items */\uc0\u8232 .flexItem > p \{\u8232 	/* cr\'e9er de l\'92espacement \'e0 l\'92int\'e9rieur des flex items */\u8232 	padding: 15px 15px;\u8232 \}\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs24 \cf0 \
Flexbox imbrique votre barre de navigation.\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs22 \cf0 Difficult\'e9 2/5
\fs24 \

\fs22 Nouveau cas de figure, les colonnes. Un peu plus compliqu\'e9 car de nouvelles propri\'e9t\'e9s s'appliquent. Ce syst\'e8me permet de construire des grilles pour des pages web adapt\'e9es \'e0 son contenu.\
Dans un premier temps, il faut inverser l'axe principal pour aligner les flex items. La propri\'e9t\'e9 
\b flex-direction
\b0  s'applique au flex container.\
Une fois align\'e9s, il faut placer le groupe des flex items dans l'espace du flex container. La propri\'e9t\'e9 
\b justify-content
\b0  s'applique au flex container.\
Pour construire la barre de l'exemple, on doit placer les flex items \'e0 droite du flex container.\
La longueur et la hauteur des flex items sont g\'e9r\'e9es par le 
\b padding
\b0  attribu\'e9 au contenu de ces items. La barre de navigation est construite, et en quelques propri\'e9t\'e9s seulement. Rien de bien m\'e9chant, mais \'e7a va se corser \'e0 la prochaine \'e9tape.\
HTML\uc0\u8232 <\'85>\u8232 <ul class="flexContainer">\
\pard\pardeftab708\li708\ri-1\sl259\slmult1\sa160
\cf0 <li class="flexItem"><p>accueil</p></li>\uc0\u8232 <li class="flexItem "><p>projets</p></li>\u8232 <li class="flexItem "><p>\'e0 propos</p></li>\u8232 <li class="flexItem "><p>contact</p></li>\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160
\cf0 </ul>\uc0\u8232 <\'85>\
CSS\uc0\u8232 /* l\'92\'e9l\'e9ment parent */\u8232 . flexContainer \{\u8232 	/* d\'e9clarer le comportement au flex container */\u8232 	display: flex;\u8232 \u8232 	/* modifier la direction de l\'92axe en l\'92orientant de gauche en droite */\u8232 	flex-direction: row;\u8232 \u8232 	/* les flex items reviendront \'e0 la ligne automatiquement si \'e7a d\'e9passe */\u8232 	flex-wrap: wrap;\
	/* l\'92origine des flex items sera \'e0 l\'92extr\'e9mit\'e9 droite du flex container plut\'f4t qu\'92\'e0 gauche */\uc0\u8232 	justify-content: flex-end;\u8232 \u8232 	/* reset de l\'92\'e9l\'e9ment <ul> */\u8232 	padding: 0;\u8232 	list-style: none;\u8232 	max-width: 960px;\u8232 	margin: 0 auto;\u8232 \}\
/* Les \'e9l\'e9ments \'e0 l\'92int\'e9rieur des flex items */\uc0\u8232 .flexItem > p \{\u8232 	/* cr\'e9er de l\'92espacement \'e0 l\'92int\'e9rieur des flex items */\u8232 	padding: 25px 15px;\u8232 \}\
\
\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs24 \cf0 Flexbox et Masonry font bon m\'e9nage.\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs22 \cf0 Difficult\'e9 4/5\
Le niveau monte. Quand un jour on a besoin de cr\'e9er une mise en page de grille dynamique, on fait appel g\'e9n\'e9ralement au principal plugin qui g\'e8re \'e7a: Masonry. Le hic : Masonry est un plugin utilisant la librairie JQuery. Ce qui veut dire qu'il y a du Javascript. Le but est de montrer que cette grille peut se faire sans une seule once de JS.\
Pour cela, commen\'e7ons par donner un comportement au flex container, de mani\'e8re \'e0 ce que les flex items forment une liste verticale.\
\'c0 ce stade, les flex items prennent 100% de la taille du flex container. L'objectif est de faire remonter en haut quelques flex items. Il est alors essentiel de donner une valeur absolue \'e0 la propri\'e9t\'e9 
\b height
\b0 , donn\'e9e au flex container.\
Il y a un souci... Les flex items d\'e9bordent du flex container. Dans ce cas-l\'e0, on proc\'e8de alors \'e0 ce que fait Masonry: des largeurs diff\'e9rentes, pour former une mosa\'efque. On peut appliquer n'importe quelle taille, mais dans cette exemple, il y en a seulement 2. La propri\'e9t\'e9 
\b width
\b0  s'applique aux flex items.\
Cette mani\'e8re de construire des grilles n'a pas vocation \'e0 remplacer Masonry, ce plugin g\'e8re mieux la mosa\'efque, pour un rendu propre. Flexbox en donne un avant-go\'fbt et permet de construire des grilles modulables rien qu'avec du CSS et un peu d'huile de coude, une bonne solution pour les n\'e9ophytes.\
La derni\'e8re \'e9tape vous attend en bas, c'est un peu le c-c-c-c-combo des capacit\'e9s de Flexbox.\
\
HTML\uc0\u8232 <\'85>\u8232 <ul class="flexContainer">\
\uc0\u8232 	<li class="flexItems mediumC">\u8232 		<div class="wrapper">\u8232 			<img src="img/test4.jpg" alt=" image \'e0 incorporer " />\u8232 			<span class="animation"><p>Bottle</p><button class="animation" alt="simuler un lien">jetez un \'9cil</button></span>\u8232 		</div>\u8232 	</li>\u8232 	<\'85>\u8232 	<li class="flexItems smallC">\u8232 		<div class="wrapper">\u8232 			<img src="img/test5.jpg" alt="image \'e0 incorporer" />\u8232 			<span class="animation"><p>Geometric</p><button class="animation" alt="simuler un lien">jetez un \'9cil</button></span>\u8232 		</div>\u8232 	</li>\
\uc0\u8232 </ul>\u8232 <\'85>\
CSS\uc0\u8232 /* l\'92\'e9l\'e9ment parent */\u8232 . flexContainer \{\u8232 	/* d\'e9clarer le comportement au flex container */\u8232 	display: flex;\u8232 \u8232 	/* modifier la direction de l\'92axe en l\'92orientant de haut en bas */\u8232 	flex-direction: column;\u8232 \u8232 	/* les flex items reviendront \'e0 la ligne automatiquement si \'e7a d\'e9passe */\u8232 	flex-wrap: wrap;\u8232 \u8232 	/* reset de l\'92\'e9l\'e9ment <ul> */\u8232 	padding: 0;\u8232 	list-style: none;\u8232 	max-width: 960px;\u8232 	margin: 0 auto;\
	/* dans ce cas-l\'e0, il faut sp\'e9cifier une hauteur absolue */\uc0\u8232 	height: 2100px\u8232 \}\
/* On indique la taille que prendront les flex items avec la class smallC */\uc0\u8232 .flexContainer > .smallC \{\
	/* il faudrait que ces flex items prennent 1/3 de la largeur du flex container */\uc0\u8232 	width\'a0: 33.33%\u8232 \}\
/* On indique la taille que prendront les flex items avec la class mediumC */\uc0\u8232 .flexContainer > .smallC \{\
	/* il faudrait que ces flex items prennent 2/3 de la largeur du flex container */\uc0\u8232 	width\'a0: 66.66%\u8232 \}\
/* on signale \'e0 l\'92image et son contenant de prendre une largeur \'e9gale \'e0 celle du flex item */\uc0\u8232 .flexItems > .wrapper, .flexItems > .wrapper img \{\
\pard\pardeftab708\fi708\ri-1\sl259\slmult1\sa160
\cf0 width\'a0: 100%\'a0;\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160
\cf0 \}\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs24 \cf0 Flexbox et le responsive.\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs22 \cf0 Difficult\'e9 5/5
\fs24 \

\fs22 Le plus dur arrive, mais en r\'e9alit\'e9 ce n'est pas si compliqu\'e9. Il s'agit dans un premier temps de dire au flex container de construire une liste en colonne, o\'f9 les \'e9l\'e9ments peuvent revenir \'e0 la ligne.\
Ensuite, pour faire varier la taille des bo\'eetes, il suffit de constituer un syst\'e8me de grille avec diff\'e9rentes valeurs de flex basis.\
En appliquant ces diff\'e9rentes tailles aux flex items, ceux-ci auront une taille diff\'e9rente, afin de cr\'e9er un rythme. Pour le responsive il vaudrait mieux, avant toute chose, consulter le tutoriel d\'92Elodie sur le responsive web design. Il faudrait dire au CSS via 
\b @media screen 
\b0 qu'au point de rupture (breakpoint), flex basis prendra une valeur de 100%, par rapport au flex container.\
En redimensionnant, vous apercevrez que les bo\'eetes vont se redimensionner et s'\'e9tirer, tout en conservant une harmonie dans le flex container.\
HTML\uc0\u8232 <\'85>\u8232 <ul class="flexContainer">\
\uc0\u8232 	<li class="flexItems sysCol8">\u8232 		<div class="wrapper">\u8232 			<h3>Je suis le 1e billet.</h3>\u8232 			<p>Avec pas mal de contenu au premier abord, car je suis pas mal large. Ce qui laisse pas mal d'\'e9criture.</p>\u8232 		</div>\u8232 	</li>\
	<..>\uc0\u8232 	<li class="flexItems sysCol6">\u8232 		<div class="wrapper">\u8232 			<h3>Je suis le der.</h3>\u8232 			<p>J\'92ai plus grand-chose \'e0 dire, \'e0 part merci\'a0</p>\u8232 		</div>\u8232 	</li>\
\uc0\u8232 </ul>\u8232 <\'85>\
CSS\uc0\u8232 /* l\'92\'e9l\'e9ment parent */\u8232 . flexContainer \{\u8232 	/* d\'e9clarer le comportement au flex container */\u8232 	display: flex;\u8232 \u8232 	/* modifier la direction de l\'92axe en l\'92orientant de gauche \'e0 droite */\u8232 	flex-direction: row;\u8232 \u8232 	/* les flex items reviendront \'e0 la ligne automatiquement si \'e7a d\'e9passe */\u8232 	flex-wrap: wrap;\u8232 \u8232 	/* reset de l\'92\'e9l\'e9ment <ul> */\u8232 	padding: 0;\u8232 	list-style: none;\u8232 	max-width: 960px;\u8232 	margin: 0 auto;\u8232 \}\
/* On mod\'e9lise le syst\'e8me de colonage, et celles-ci sont divis\'e9es en 12 colonnes, et fonctionnent par paires*/\
.flexContainer > .sysCol1 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 8.33%\u8232 \}\
.flexContainer > .sysCol2 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 16.66%\u8232 \}\
.flexContainer > .sysCol3 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 25%\u8232 \}\
.flexContainer > .sysCol4 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 33.33%\u8232 \}\
.flexContainer > .sysCol5 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 41.16%\u8232 \}\
.flexContainer > .sysCol6 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 50%\u8232 \}\
.flexContainer > .sysCol7 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 58.33%\u8232 \}\
.flexContainer > .sysCol8 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 66.66%\u8232 \}\
.flexContainer > .sysCol9 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 75%\u8232 \}\
.flexContainer > .sysCol10 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 83.33%\u8232 \}\
.flexContainer > .sysCol11 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 91.66%\u8232 \}\
.flexContainer > .sysCol12 \{\
	/* en utilisant la propri\'e9t\'e9 flex */\uc0\u8232 	flex: 0 1 100%\u8232 \}\
/* On mod\'e9lise les billets en appliquant une goutti\'e8re et une marge interne */\uc0\u8232 .flexContainer > .flexItems \{\u8232 	padding: 25px;\u8232 	margin: 15px;\u8232 	background: #fff;\u8232 \}\
/* l\'92enveloppe aura la largeur du flex items, tout en suivant la marge interne */\uc0\u8232 .flexItems > .wrapper \{\
\pard\pardeftab708\fi708\ri-1\sl259\slmult1\sa160
\cf0 width\'a0: 100%\'a0;\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160
\cf0 \}\
\pard\pardeftab708\ri-1\sl259\slmult1\sa160

\fs28 \cf0 Can I Use.
\fs22 \
Compatibilit\'e9\uc0\u8232 Chrome4+, Firefox2+, Safari3.1+, Opera 12.1+, IE11+\
\
Sources\
CSS3 Flexbox Layout module - http://www.alsacreations.com/tuto/lire/1493-css3-flexbox-layout-module.html\
Jack in the flexbox - http://jackintheflexbox.tumblr.com\
Flexbox adventures - http://chriswrightdesign.com/experiments/flexbox-adventures/\
A Complete Guide to Flexbox - http://css-tricks.com/snippets/css/a-guide-to-flexbox/\
}